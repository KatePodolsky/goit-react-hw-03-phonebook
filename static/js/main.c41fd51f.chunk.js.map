{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/FilterContacts/FilterContacts.module.css","App.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/FilterContacts/FilterContacts.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","ContactForm","state","name","props","number","nameInputId","shortid","generate","numberInputId","handleContactAdd","e","currentTarget","value","setState","handlesubmit","preventDefault","onSubmit","reset","this","form","htmlFor","property","type","pattern","title","required","input","onChange","id","button","Component","defaultProps","ContactListItem","contact","onDeleteContact","item","onClick","ContactList","contacts","contactList","map","FilterContacts","filterName","App","filter","formAddContact","some","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getfilteredContacts","normalizedFilter","includes","componentDidMount","localStorage","getItem","parsedContacts","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c41fd51f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__1Z-te\",\"item\":\"ContactListItem_item__bntQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterName\":\"FilterContacts_filterName__1KGlL\",\"input\":\"FilterContacts_input__16fS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2X8WI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3CuSv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1OQB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZMDOi\",\"property\":\"ContactForm_property__1Nzb5\",\"input\":\"ContactForm_input__3hs5B\",\"button\":\"ContactForm_button__1eqNO\"};","import React from 'react';\r\nimport styles from  './Container.module.css'\r\n\r\nconst Container = ({ children }) => <div className={styles.Container}>{children}</div>;\r\n\r\nexport default Container","import React, { Component } from \"react\";\r\nimport shortid from 'shortid';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.css\"\r\n\r\nclass ContactForm extends Component{\r\n    static defaultProps = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n  };\r\n    \r\n    state = {\r\n        name: this.props.name,\r\n        number: this.props.number,\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n    \r\n    handleContactAdd = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]:value});\r\n    }\r\n\r\n    handlesubmit = e => {\r\n         e.preventDefault();\r\n         this.props.onSubmit(this.state);\r\n         this.reset()\r\n    }\r\n    reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n    \r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <form onSubmit={this.handlesubmit} className={styles.form}>\r\n                <label htmlFor={this.nameInputId} className={styles.property}>\r\n                    <span>Name</span>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    className={styles.input}\r\n                    onChange={this.handleContactAdd}\r\n                    id={this.nameInputId}   \r\n                    />\r\n                </label>\r\n                <label htmlFor={this.numberInputId} className={styles.property}>\r\n                     <span>Number</span>\r\n                    <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    className={styles.input}\r\n                    onChange={this.handleContactAdd}\r\n                        id={this.numberInputId}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={styles.button}>\r\n                  Add contact\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport styles from \"../ContactListItem/ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({contact:{name,number,id},onDeleteContact}) => (\r\n    <li className={styles.item}>\r\n        <span>{name}: {number}</span>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n    </li>\r\n)\r\n\r\nexport default ContactListItem","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ContactList.module.css\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\"\r\n\r\nconst ContactList = ({ contacts,onDeleteContact}) => (\r\n        <ul className={styles.contactList}>\r\n            {contacts.map((contact) => (\r\n                <ContactListItem key={contact.id} contact={contact} onDeleteContact={onDeleteContact} />\r\n        ))}\r\n        </ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport styles from \"./FilterContacts.module.css\";\r\n\r\nconst FilterContacts = ({ value, onChange }) => (\r\n    <label className={styles.filterName}>\r\n        Filter by name\r\n        <input type=\"text\" value={value} onChange={onChange} className={styles.input} />\r\n    </label>\r\n)\r\n\r\nexport default FilterContacts","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from 'shortid';\r\n\r\nimport Container from \"./components/Container/Container\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport FilterContacts from \"./components/FilterContacts/FilterContacts\"\r\n\r\nimport styles from \"./App.module.css\"\r\n\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    contacts: [ ],\r\n    filter: ''\r\n  };\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.array,\r\n    filter: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    contacts: this.props.contacts,\r\n    filter: this.props.filter,\r\n  };\r\n\r\n  formAddContact = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    contacts.some(({ name }) => name.toLowerCase() === contact.name.toLowerCase()) \r\n      ? alert(`${name} is already in contacts`)\r\n      : contacts.some(({ number }) => number === contact.number)\r\n        ? alert(`${number} is already in contacts under a different name`)\r\n        : this.setState(({ contacts }) => ({\r\n      contacts:[contact, ...contacts]\r\n    }))\r\n  \r\n  }\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({filter:e.currentTarget.value})\r\n  }\r\n  \r\n  getfilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const normalizedFilter = filter.toLowerCase()\r\n    \r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter))\r\n  }\r\n  \r\n  componentDidMount=()=>{      \r\n     const contacts = localStorage.getItem('contacts');\r\n     const parsedContacts = JSON.parse(contacts);\r\n\r\n     if (parsedContacts) {\r\n       this.setState({ contacts: parsedContacts });\r\n     }\r\n   }\r\n\r\n  componentDidUpdate=(prevProps,prevState)=>{\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts',JSON.stringify(this.state.contacts))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getfilteredContacts();\r\n\r\n        return (\r\n          <Container>\r\n            <h1 className={styles.title}>Phonebook</h1>\r\n            <ContactForm onSubmit={this.formAddContact} />\r\n\r\n            <h2 className={styles.title}>Contacts</h2>\r\n            <FilterContacts\r\n              value={filter}\r\n              onChange={this.changeFilter}\r\n            />\r\n            <ContactList\r\n              contacts={filteredContacts}\r\n              onDeleteContact={this.deleteContact}\r\n            />\r\n          </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport styles from \"./index.module.css\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}